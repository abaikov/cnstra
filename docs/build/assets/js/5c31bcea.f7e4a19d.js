"use strict";(self.webpackChunkcnstra_docs=self.webpackChunkcnstra_docs||[]).push([[740],{5258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"concepts/concepts-intro","title":"Introduction to CNStra - Type-Safe Orchestration Library","description":"CNStra is a zero-dependency state machine and orchestration library for JavaScript/TypeScript. Learn about IERG (Inverted Explicit Reactive Graph), deterministic workflows, and SOLID/SRP principles for React and backend applications.","source":"@site/concepts/intro.md","sourceDirName":"concepts","slug":"/concepts/intro","permalink":"/docs/concepts/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/abaikov/cnstra/edit/master/docs/concepts/intro.md","tags":[],"version":"current","lastUpdatedAt":1760165297000,"frontMatter":{"id":"concepts-intro","title":"Introduction to CNStra - Type-Safe Orchestration Library","sidebar_label":"Introduction","slug":"/concepts/intro","description":"CNStra is a zero-dependency state machine and orchestration library for JavaScript/TypeScript. Learn about IERG (Inverted Explicit Reactive Graph), deterministic workflows, and SOLID/SRP principles for React and backend applications.","keywords":["introduction","getting started","state machine basics","orchestration tutorial","IERG","reactive graph","deterministic state machine","neuron model","signal flow","type-safe orchestration","JavaScript state management","TypeScript orchestration"]},"sidebar":"docs","previous":{"title":"IERG","permalink":"/docs/concepts/ierg"},"next":{"title":"CNStra & OIMDB","permalink":"/docs/frontend/oimdb"}}');var i=n(4848),o=n(8453);const s={id:"concepts-intro",title:"Introduction to CNStra - Type-Safe Orchestration Library",sidebar_label:"Introduction",slug:"/concepts/intro",description:"CNStra is a zero-dependency state machine and orchestration library for JavaScript/TypeScript. Learn about IERG (Inverted Explicit Reactive Graph), deterministic workflows, and SOLID/SRP principles for React and backend applications.",keywords:["introduction","getting started","state machine basics","orchestration tutorial","IERG","reactive graph","deterministic state machine","neuron model","signal flow","type-safe orchestration","JavaScript state management","TypeScript orchestration"]},a=void 0,c={},l=[];function d(e){const t={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Central Nervous System (CNS) for apps."}),"\n",(0,i.jsx)(t.p,{children:"Think of your application as an organism. Instead of a global event bus, you have a central nervous system that runs deterministic, typed reactions across a graph of neurons. This makes flows explicit, testable, and fast."}),"\n",(0,i.jsx)(t.p,{children:"CNStra (Central Nervous System Orchestrator) is an IERG (Inverted Explicit Reactive Graph): you explicitly start a run; each neuron explicitly returns the next step; nothing happens in the background unless you ask for it."}),"\n",(0,i.jsx)(t.p,{children:'Name: CNS + "tra" (orchestrator) \u2192 CNStra.'}),"\n",(0,i.jsx)(t.p,{children:"Analogy: biology \u2194 application"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["CNS (central nervous system) \u2194 ",(0,i.jsx)(t.code,{children:"CNS"})," orchestrator instance running the graph"]}),"\n",(0,i.jsx)(t.li,{children:"Neuron \u2194 a unit of logic that reacts to one input and produces one continuation"}),"\n",(0,i.jsx)(t.li,{children:"Dendrite (input) \u2194 neuron.dendrite bound to a specific collateral"}),"\n",(0,i.jsxs)(t.li,{children:["Axon (outputs) \u2194 neuron\u2019s ",(0,i.jsx)(t.code,{children:"axon"})," with named output channels"]}),"\n",(0,i.jsx)(t.li,{children:"Collateral (channel) \u2194 typed output channel that mints signals"}),"\n",(0,i.jsx)(t.li,{children:"Signal (impulse) \u2194 typed payload traveling the graph"}),"\n",(0,i.jsxs)(t.li,{children:["Stimulation (nerve firing) \u2194 ",(0,i.jsx)(t.code,{children:"cns.stimulate(signal, options)"})," run"]}),"\n",(0,i.jsx)(t.li,{children:"Context (local chemistry) \u2194 per\u2011run context store passed to dendrites"}),"\n",(0,i.jsx)(t.li,{children:"Queues (conduction control) \u2194 ordered/batched/parallel execution with backpressure"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Key properties"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Deterministic: same input \u2192 same path; hop\u2011bounded; no hidden listeners"}),"\n",(0,i.jsx)(t.li,{children:"SRP by construction: actors are visible; responsibilities are local and explicit"}),"\n",(0,i.jsx)(t.li,{children:"Ownership: a neuron emits only its axon\u2019s collaterals; others bind via dendrites"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Short vs long flows"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Short\u2011lived (one stimulation): complete a bounded flow in a single run (validate \u2192 fetch \u2192 render), cancel with ",(0,i.jsx)(t.code,{children:"AbortSignal"})]}),"\n",(0,i.jsx)(t.li,{children:"Long\u2011lived (many stimulations): continue on external events (queue/webhook/cron) by re\u2011stimulating with correlation data"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Where to go next"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Concepts: ",(0,i.jsx)(t.a,{href:"/docs/concepts/ierg",children:"IERG"})]}),"\n",(0,i.jsxs)(t.li,{children:["Frontend: ",(0,i.jsx)(t.a,{href:"/docs/frontend/oimdb",children:"CNStra & OIMDB"})]}),"\n",(0,i.jsxs)(t.li,{children:["Core: ",(0,i.jsx)(t.a,{href:"/docs/core/quick-start",children:"Quick Start"}),", ",(0,i.jsx)(t.a,{href:"/docs/core/api",children:"API"})]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const i={},o=r.createContext(i);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);