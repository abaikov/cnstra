"use strict";(self.webpackChunkcnstra_docs=self.webpackChunkcnstra_docs||[]).push([[109],{7605:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"recipes/cancel","title":"Cancellation","description":"Use AbortSignal to cancel in-flight stimulation runs.","source":"@site/recipes/cancel.md","sourceDirName":"recipes","slug":"/recipes/cancel","permalink":"/docs/recipes/cancel","draft":false,"unlisted":false,"editUrl":"https://github.com/abaikov/cnstra/edit/master/docs/recipes/cancel.md","tags":[],"version":"current","lastUpdatedAt":1760129292000,"frontMatter":{"id":"cancel","title":"Cancellation","sidebar_label":"Cancellation","slug":"/recipes/cancel"},"sidebar":"docs","previous":{"title":"Performance","permalink":"/docs/advanced/performance"},"next":{"title":"Error Handling","permalink":"/docs/recipes/error-handling"}}');var a=t(4848),s=t(8453);const l={id:"cancel",title:"Cancellation",sidebar_label:"Cancellation",slug:"/recipes/cancel"},i=void 0,c={},o=[{value:"Graceful shutdown",id:"graceful-shutdown",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"AbortSignal"})," to cancel in-flight stimulation runs."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const controller = new AbortController();\n\ncns.stimulate(collateral.createSignal(input), {\n  abortSignal: controller.signal,\n});\n\n// Later\ncontroller.abort();\n"})}),"\n",(0,a.jsx)(n.p,{children:"Notes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Dendrites receive ",(0,a.jsx)(n.code,{children:"abortSignal"})," in their context; long operations should check it."]}),"\n",(0,a.jsxs)(n.li,{children:["The same ",(0,a.jsx)(n.code,{children:"abortSignal"})," is visible to every neuron participating in the current run; each can react early."]}),"\n",(0,a.jsx)(n.li,{children:"Compose with UI events (route change, user typing) to avoid stale work."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Example: cooperative cancel inside a neuron"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const work = neuron('work', {}).dendrite({\n  collateral: someInput,\n  response: async (payload, axon, ctx) => {\n    if (ctx.abortSignal?.aborted) return; // bail before starting\n    const res = await heavyTask(payload, ctx.abortSignal); // pass signal to IO when possible\n    if (ctx.abortSignal?.aborted) return; // bail before emit\n    return undefined;\n  },\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:"Cancelling a running stimulation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const ac = new AbortController();\n\n// start the run\ncns.stimulate(start.createSignal(payload), { abortSignal: ac.signal });\n\n// cancel at any time (e.g., on route change)\nac.abort();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"graceful-shutdown",children:"Graceful shutdown"}),"\n",(0,a.jsx)(n.p,{children:"There are two ways to finish active runs:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Natural drain (recommended):"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Stop starting new ",(0,a.jsx)(n.code,{children:"stimulate(...)"})," calls and simply ",(0,a.jsx)(n.code,{children:"await"})," all in\u2011flight promises returned by ",(0,a.jsx)(n.code,{children:"stimulate"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"The internal queue drains and the run completes naturally."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Cooperative termination via ",(0,a.jsx)(n.code,{children:"AbortSignal"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Pass an ",(0,a.jsx)(n.code,{children:"abortSignal"})," to ",(0,a.jsx)(n.code,{children:"stimulate(...)"})," and call ",(0,a.jsx)(n.code,{children:"abort()"})," when you want to stop."]}),"\n",(0,a.jsxs)(n.li,{children:["Behavior:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"New queued items do not start (cancel gate)."}),"\n",(0,a.jsx)(n.li,{children:"Once active tasks finish, the run resolves even if there are queued items that never started."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Implications:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Not\u2011started items are skipped; if you need them later, persist them (e.g., in your context store or an external queue) and restart explicitly."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Example: graceful shutdown on process signals"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const ac = new AbortController();\nprocess.on('SIGTERM', () => ac.abort());\nprocess.on('SIGINT', () => ac.abort());\n\n// elsewhere\nawait cns.stimulate(start.createSignal(payload), { abortSignal: ac.signal });\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var r=t(6540);const a={},s=r.createContext(a);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);