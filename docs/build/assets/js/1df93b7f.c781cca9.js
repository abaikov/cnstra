"use strict";(self.webpackChunkcnstra_docs=self.webpackChunkcnstra_docs||[]).push([[583],{6866:(e,s,r)=>{r.r(s),r.d(s,{default:()=>i});r(6540);var c=r(1656),l=r(8774),a=r(1107),n=r(4848);function i(){return(0,n.jsxs)(c.A,{title:"CNStra Documentation",description:"Central Nervous System Orchestrator for apps",children:[(0,n.jsx)("header",{className:"hero hero--primary",children:(0,n.jsxs)("div",{className:"container",children:[(0,n.jsx)(a.A,{as:"h1",className:"heroTitleRed",children:"CNStra"}),(0,n.jsx)("p",{className:"hero__subtitle",children:"Central Nervous System Orchestrator for building predictable, reactive pipelines."}),(0,n.jsx)("div",{children:(0,n.jsx)(l.A,{className:"button button--secondary button--lg",to:"/docs/core/quick-start",children:"Get Started"})})]})}),(0,n.jsx)("main",{children:(0,n.jsx)("section",{className:"container margin-vert--lg",children:(0,n.jsxs)("div",{className:"row",children:[(0,n.jsxs)("div",{className:"col col--4",children:[(0,n.jsx)("h3",{children:"Composable"}),(0,n.jsx)("p",{children:"Build complex flows from small, testable units (neurons, signals, queues)."})]}),(0,n.jsxs)("div",{className:"col col--4",children:[(0,n.jsx)("h3",{children:"Type-Safe"}),(0,n.jsx)("p",{children:"First-class TypeScript support across core, devtools, and React bindings."})]}),(0,n.jsxs)("div",{className:"col col--4",children:[(0,n.jsx)("h3",{children:"Observable"}),(0,n.jsx)("p",{children:"Devtools and visual graph help inspect and debug neuron networks."})]})]})})})]})}}}]);