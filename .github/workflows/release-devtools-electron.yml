name: Release DevTools Electron

on:
  workflow_dispatch:
  push:
    tags:
      - 'devtools-electron-v*'

permissions:
  contents: write

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Build mac (arm64 + x64) with notarization
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: ./scripts/build-electron-local.sh mac

      - name: Upload mac artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-artifacts
          retention-days: 1
          path: |
            packages/devtools-electron/dist/*.dmg
            packages/devtools-electron/dist/*.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Build windows exe
        run: bash ./scripts/build-electron-local.sh win

      - name: Upload windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          retention-days: 1
          path: packages/devtools-electron/dist/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Build linux AppImage
        run: ./scripts/build-electron-local.sh linux

      - name: Upload linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          retention-days: 1
          path: packages/devtools-electron/dist/*.AppImage

  release:
    needs: [build-mac, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: find artifacts -type f

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            artifacts/mac-artifacts/*
            artifacts/windows-artifacts/*
            artifacts/linux-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


